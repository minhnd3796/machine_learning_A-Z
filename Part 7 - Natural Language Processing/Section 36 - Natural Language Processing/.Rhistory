1`+1`
1+1
install.packages('arules')
install.packages("~/Downloads/arules_1.5-5.tar.gz", repos = NULL, type = "source")
library(arules)
library(arules)
install.packages('Matrix')
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
library(tm)
library(SnowballC)
setwd("~/Desktop/Machine Learning A-Z Template Folder/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing")
install.packages('randomForest')
dataset_original = read.delim('Restaurant_Reviews.tsv', quote = '', stringsAsFactors = FALSE)
View(dataset_original)
corpus = VCorpus(VectorSource(dataset_original$Review))
View(dataset_original)
View(corpus)
as.character(corpus[[1]])
corpus = tm_map(corpus, content_transformer(tolower))
as.character(corpus[[1]])
corpus = tm_map(corpus, removeNumbers)
as.character(corpus[[841]])
corpus = tm_map(corpus, removePunctuation)
as.character(corpus[[841]])
as.character(corpus[[1]])
corpus = tm_map(corpus, removeWords, stopwords())
as.character(corpus[[1]])
corpus = tm_map(corpus, stemDocument)
as.character(corpus[[1]])
as.character(corpus[[841]])
View(corpus)
dtm = DocumentTermMatrix(corpus)
View(dtm)
View(dtm)
dtm
dtm = removeSparseTerms(dtm, 0.999)
dtm
View(dtm)
dtm = removeSparseTerms(dtm, 0.99)
dtm
View(dtm)
dtm = removeSparseTerms(dtm, 0.999)
View(dtm)
dtm = removeSparseTerms(dtm, 0.999)
View(dtm)
dtm = DocumentTermMatrix(corpus)
dtm = removeSparseTerms(dtm, 0.999)
View(dtm)
setwd("~/Desktop/Machine Learning A-Z Template Folder/Part 7 - Natural Language Processing/Section 36 - Natural Language Processing")
dataset = as.data.frame(as.matrix(dtm))
View(dataset)
dataset$Liked = dataset_original$Liked
View(dataset)
dataset$Liked = factor(dataset$Liked, levels = c(0, 1))
library(caTools)
set.seed(123)
split = sample.split(dataset$Liked, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Random Forest Classification to the Training set
# install.packages('randomForest')
library(randomForest)
classifier = randomForest(x = training_set[-692],
y = training_set$Liked,
ntree = 10)
# Predicting the Test set results
y_pred = predict(classifier, newdata = test_set[-692])
# Making the Confusion Matrix
cm = table(test_set[, 692], y_pred)
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Liked, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(randomForest)
classifier = randomForest(x = training_set[-692],
y = training_set$Liked,
ntree = 10)
# Predicting the Test set results
y_pred = predict(classifier, newdata = test_set[-692])
cm = table(test_set[, 692], y_pred)
cm
(78 + 75) / 200
